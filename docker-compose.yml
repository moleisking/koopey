version: '3.8'

networks:
  koopey-docker-network:
    ipam:
      config:
        - subnet: 10.18.0.0/24
      driver: default
    name: koopey-docker-network #external: true

services:

  grafana:
    container_name: grafana
    image: grafana/grafana-enterprise:8.2.0
    ports:
      - '3000:3000'

  kafka:
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://localhost:9092
      KAFKA_BROKER_ID: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    hostname: kafka
    image: confluentinc/cp-kafka:5.5.0
    networks:
      koopey-docker-network:
        ipv4_address: 10.18.0.3
    ports:
      - '9092:9092'

  koopeyapi:
    build: .
    container_name: koopeyapi
    ports:
      - '1709:1709'
    environment:
      - KAFKA_HOST=${KAFKA_HOST}
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
    env_file:
      - docker.env
    extra_hosts:
      - "host.docker.internal:host-gateway"

  zookeeper:
    container_name: zookeeper
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888;2181
    hostname: zookeeper
    image: zookeeper:3.7
    networks:
      koopey-docker-network:
        ipv4_address: 10.18.0.7
    ports:
      - '2181:2181'
