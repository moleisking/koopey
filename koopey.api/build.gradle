plugins {
	id 'com.netflix.dgs.codegen' version '5.1.16'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'	
	id 'java'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'org.sonarqube' version "3.3"
	id 'org.springframework.boot' version '3.2.10'
}

group = 'com.koopey'

version = '0.0.1-SNAPSHOT'
java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	annotationProcessor 'org.projectlombok:lombok:1.18.28'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	//compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.2.4'
	//compile group: 'org.hibernate', name: 'hibernate-core', version: '5.2.13.Final'
	//compile group: 'org.javassist', name: 'javassist', version: '3.25.0-GA'
	compileOnly 'org.projectlombok:lombok:1.18.28'
	
	implementation 'com.google.guava:guava:33.0.0-jre'
	implementation 'com.rabbitmq:amqp-client:5.22.0'
	implementation 'org.hibernate.orm:hibernate-core:6.1.4.Final'
	// implementation 'org.hibernate:hibernate-entitymanager:5.6.15.Final'
	implementation 'org.modelmapper:modelmapper:2.4.4'
	//implementation 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.3'
	implementation 'org.springdoc:springdoc-openapi-ui:1.8.0'
	implementation 'org.springdoc:springdoc-openapi-security:1.8.0'
	// implementation 'org.springframework.boot:spring-boot-starter-autoconfigure'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-configuration-processor'
	implementation 'org.springframework.kafka:spring-kafka:3.2.1'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.0'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.0'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.0'
   // implementation(platform("com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:latest.release"))
    implementation "com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter:9.0.4"
//	implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.2'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.17.2'
//	implementation 'javax.xml.bind:jaxb-api:2.3.0'
	implementation 'org.javassist:javassist:3.25.0-GA'
	// implementation 'jakarta.annotation:jakarta.annotation-api:3.0.0'
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'
	
	//runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.springframework.boot:spring-boot-properties-migrator'
	runtimeOnly 'com.mysql:mysql-connector-j'
	
	testImplementation("com.netflix.graphql.dgs:graphql-dgs-client")
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.springframework.security:spring-security-test'
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}

bootRun {
 	doFirst {
        jvmArgs = ["-Dspring.profiles.active=dev"]
    }
	
	systemProperty 'spring.profiles.active', 'dev'
}

sonarqube {
    properties {
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.login", "312fcde051034f25d8eb3da40e7bc4c5317e479c"
		property "sonar.exclusions", "**/authentication/*,src/main/java/**/*"
		property "sonar.verbose" , "true"
    }
}

/*shadowJar {
    baseName 'api'
    manifest {
        attributes 'Main-Class': 'com.koopey.api.ServerApplication'
    }
}*/